--- INT VECTOR GENERAL TESTS --
size			300
capacity		512
first element		0
as const		0
last element		299
as const		299
[] operator		10
as const		100
out of bounds		0
at func test		10
as const		100
out of bounds		1vector
size after smaller resize	50
capacity after smaller resize	512
size after bigger resize	200
capacity after bigger resize	512
[] operator		0
[] operator		0
[] operator		200
size after bigger resize	400
capacity after bigger resize	512
[] operator		0
[] operator		99
[] operator		99
max capacity		4611686018427387903
reserve capacity		512
reserve capacity		1000
vector contains: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49
vector constructor with input: 100 100 100 100 100 100 100
capacity	7
original state:  0 1 2 3 4 5 6 7 8 9
vector after end insert:	 0 1 2 3 4 5 6 7 8 9 900
vector after middle insert:  0 1 2 3 300 4 5 6 7 8 9 900
vector after n inserts:  0 1 2 3 200 200 200 300 4 5 6 7 8 9 900
vector after iterator range insert:	 0 1 2 3 100 100 100 100 100 100 100 200 200 200 300 4 5 6 7 8 9 900
vector pop_back:	 0 1 2 3 100 100 100 100 100 100 100 200 200 200 300 4 5 6 7 8 9

--- INT VECTOR ITERATOR TESTS --
is equal			1
is not equal			0
is not equal			0
is smaller			0
is smaller			0
is bigger			0
is bigger			0
is smaller or equal		1
is smaller or equal		1
is bigger or equal		1
is bigger or equal		1
the value is			0
the value after increment	2
the value after decrement	0
dereference and increment	0
dereference and increment	2
increment with five		100
increment with eight		200
size				0
value				32
value				100
subtract iterators		29
subtract iterators		-29
decrement with three		29
after increment ten		42
after decrement four		38
look at index eight		46

--- INT VECTOR REVERSE ITERATOR TESTS --
begin value 0
end value 0
vector contains:
is equal			1
is not equal			0
is smaller			0
is bigger			0
is bigger			0
is smaller or equal		1
is smaller or equal		1
is bigger or equal		1
is bigger or equal		1
the value is			0
the value after increment	0
the value after decrement	0
dereference and increment	0
dereference and increment	0
increment with five		0
increment with eight		0

--- STRING VECTOR GENERAL TESTS --
size			300
capacity		512
first element		one
as const		one
last element		test
as const		test
[] operator		eleven
as const		test
at func test		eleven
as const		test
out of bounds		1vector
size original		300
size copy		301
last original		test copy constructor
last copy		test copy constructor
size after smaller resize	50
capacity after smaller resize	512
on index 49			test
size after bigger resize	200
capacity after bigger resize	512
[] operator		
[] operator		
[] operator		test
size after bigger resize	400
capacity after bigger resize	512
[] operator		
[] operator		more test
[] operator		more test
[] operator		
size after equal	400
capacity after equal	512
max capacity		768614336404564650
reserve capacity		512
reserve capacity		1000
reserve capacity		2000

--- STRING VECTOR ITERATOR TESTS --
on index 2: e
one
is equal			0
is not equal			1
is not equal			1
is smaller			1
is smaller			0
is bigger			0
is bigger			1
is smaller or equal		1
is smaller or equal		1
is bigger or equal		0
is bigger or equal		1
the value is			two
the value after increment	four
the value after decrement	two
dereference and increment	two
dereference and increment	four
increment with five		five
int first increment		eight
size				23
value				eight
value				four
subtract iterators		8
subtract iterators		-8
decrement	eight		four
after decrement			three
after increment			inserted_string
look at index eight		twelve

--- STRING VECTOR REVERSE ITERATOR TESTS --
begin value constructor_test
end value 
on index 2: n
constructor_test
vector contains: constructor_test constructor_test constructor_test constructor_test test test test twelve eleven ten nine eight seven six five inserted_string more_inserts more_inserts more_inserts four three two one
is equal			0
is not equal			1
is smaller			0
is bigger			0
is bigger			1
is smaller or equal		1
is smaller or equal		1
is bigger or equal		0
is bigger or equal		1
the value is			constructor_test
the value after increment	constructor_test
the value after decrement	constructor_test
dereference and increment	constructor_test
dereference and increment	constructor_test
increment with five		eleven
int first increment		eight
subtract riterators		-20
